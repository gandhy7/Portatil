/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jmfvideoimage;

import controlador.conexion;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author GANDHY
 */
public class Rentregaok extends javax.swing.JFrame {

    /**
     * Creates new form Rentregaok
     */
    public Rentregaok() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDatedesde = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jDatehasta = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        jTextnitreporte = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtcant = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        t_Datosdif = new javax.swing.JTable();
        jB_aceptar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jDatedesde.setDateFormatString("yyyy-MM-dd");

        jLabel10.setText("Hasta:");

        jDatehasta.setDateFormatString("yyyy-MM-dd");

        jLabel16.setText("Nit Proveedor:");

        jLabel2.setText("Cantidad de Registros");

        txtcant.setEnabled(false);
        txtcant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcantActionPerformed(evt);
            }
        });

        t_Datosdif.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        t_Datosdif.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        t_Datosdif.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t_DatosdifMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(t_Datosdif);

        jB_aceptar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jB_aceptar.setText("Aceptar");
        jB_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_aceptarActionPerformed(evt);
            }
        });

        jLabel9.setText("Desde:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jDatedesde, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10)
                                .addGap(29, 29, 29))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(35, 35, 35)
                                .addComponent(jTextnitreporte, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jB_aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(244, 244, 244))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jDatehasta, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtcant, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 781, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel9))
                    .addComponent(jDatedesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel10)
                        .addComponent(jDatehasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtcant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextnitreporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jB_aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtcantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcantActionPerformed

    private void t_DatosdifMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t_DatosdifMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_t_DatosdifMouseClicked

    private void jB_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_aceptarActionPerformed
        if (jTextnitreporte.getText() == null) {
            JOptionPane.showMessageDialog(null, "Elija una fecha");
        }
        if (jDatedesde.getDate() == null) {
            if (jDatehasta.getDate() == null) {
                JOptionPane.showMessageDialog(null, "Elija una fecha");
            }
            JOptionPane.showMessageDialog(null, "Elija una fecha");

        } else {
            try {
                buscar();
            } catch (SQLException ex) {
                Logger.getLogger(Rentregaok.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jB_aceptarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rentregaok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rentregaok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rentregaok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rentregaok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rentregaok().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_aceptar;
    private com.toedter.calendar.JDateChooser jDatedesde;
    private com.toedter.calendar.JDateChooser jDatehasta;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextnitreporte;
    private javax.swing.JTable t_Datosdif;
    private javax.swing.JTextField txtcant;
    // End of variables declaration//GEN-END:variables
public void buscar() throws SQLException {

        /*ya estando la validacion que compruebe que todo los campos de texto esten diligenciados este metodo es el 
         encargado de guardar estos datos capturados en la base de datos*/
        try {
            //llamamos la conexion
            conexion cc = new conexion();
            Connection cn = cc.conectar();

            Statement estado1 = cn.createStatement();

            ////requisito entrada usuario
            ////////////se cambia el formato de la fecha
            Calendar cal5 = Calendar.getInstance();
            cal5.add(Calendar.DATE, 1);
            // se captura la variable
            java.util.Date date5 = null;
            date5 = jDatedesde.getDate();
            SimpleDateFormat format5 = new SimpleDateFormat("yyyy-MM-dd");
            String fechadesde = format5.format(date5);
            ///////////////////////////////////////////
            ////////////se cambia el formato de la fecha
            Calendar cal6 = Calendar.getInstance();
            cal6.add(Calendar.DATE, 1);
            // se captura la variable
            java.util.Date date6 = null;
            date6 = jDatehasta.getDate();
            SimpleDateFormat format6 = new SimpleDateFormat("yyyy-MM-dd");
            String fechahasta = format6.format(date6);
            /////////////////////////////////////////// 

            Object nit = jTextnitreporte.getText();

            ///////variables
            String paguese = null;
            Date Fechaentrega = null;
            String monto = null;
            String razonsocial = null;
            String nitdni = null;
            String entrego = null;
///////////

            ResultSet resultado = estado1.executeQuery("SELECT fechaentrega, paguese, monto, razonsocial, nit, userentrega FROM entregacheques ");

            while (resultado.next()) {

                paguese = resultado.getString("paguese");
                Fechaentrega = resultado.getDate("fechaentrega");
                monto = resultado.getString("monto");
                razonsocial = resultado.getString("razonsocial");
                nitdni = resultado.getString("nit");
                entrego = resultado.getString("userentrega");

            }
            Cargartabla();

            cn.close();

        } catch (SQLException ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, "ERROR, Registro no encontrado");

        }
    }

    int Cargartabla() {

        DefaultTableModel model;
        conexion cc = new conexion();
        Connection cn = cc.conectar();

        Date fechadesdesinformato = null;
        Date fechahastasinformato = null;
        String nitproveedor = null;

        fechadesdesinformato = jDatedesde.getDate();
         SimpleDateFormat format5 = new SimpleDateFormat("yyyy-MM-dd");
         String fechadesde = format5.format(fechadesdesinformato);
        
        
        fechahastasinformato = jDatehasta.getDate();
        SimpleDateFormat format6 = new SimpleDateFormat("yyyy-MM-dd");
         String fechahasta = format6.format(fechahastasinformato );
         fechahasta = (fechahasta+ " " + "23:59:00");
        
        
        nitproveedor = jTextnitreporte.getText();
        String sql = null;

        String[] titulos = {"F. Entrega", "Razon Social", "Nit", "Monto", "Entreagado por:"};
        String[] registros = new String[5];

        //si el usuario digita el nit del cliente solo reporta las entregas de cheque del cliente por nit. sino reporta todos
        if (nitproveedor.isEmpty()) {
            sql = "SELECT fechaentrega, paguese, monto, razonsocial, nit, userentrega FROM entregacheques WHERE fechaentrega >= '" + fechadesde + "' and fechaentrega <= '" + fechahasta + "'  ";
        } else {
            sql = "SELECT fechaentrega, paguese, monto, razonsocial, nit, userentrega FROM entregacheques WHERE fechaentrega >= '" + fechadesde + "' and fechaentrega <= '" + fechahasta + "' and '" + nitproveedor + "'  ";

        }

        model = new DefaultTableModel(null, titulos);
        //llama la conexiona a la BD//
        //conexion cc = new conexion();
        // Connection cn = cc.conectar();
        ///ejecuto la consulta y los resultados a la BD

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            //va ingresando los datos a la tabla
            while (rs.next()) {
                registros[0] = rs.getString("fechaentrega");
                registros[1] = rs.getString("razonsocial");
                registros[2] = rs.getString("nit");
                registros[3] = rs.getString("monto");
                registros[4] = rs.getString("userentrega");

                model.addRow(registros);

            }

            t_Datosdif.setModel(model);
            txtcant.setText("" + t_Datosdif.getRowCount()); //cuenta la cantidad de registros en la tabla

           // t_Datosdif.setUpdateSelectionOnSort(isIcon);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);

        }
        return 0;

    }

}
